generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())

  clients   Client[]
  sales     Sale[] // ðŸ‘ˆ Adiciona isso
  notes     Note[] // ðŸ‘ˆ Adiciona isso
  reminders Reminder[] // ðŸ‘ˆ E isso
}

model Client {
  id         String    @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  name       String
  phone      String?
  email      String?
  birthday   DateTime?
  notes      String?
  created_at DateTime  @default(now())

  sales      Sale[]
  notes_list Note[]
  reminders  Reminder[]
}

model Sale {
  id          String   @id @default(uuid())
  client      Client   @relation(fields: [clientId], references: [id])
  clientId    String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  description String?
  value       Float?
  date        DateTime
  created_at  DateTime @default(now())
}

model Note {
  id         String   @id @default(uuid())
  client     Client   @relation(fields: [clientId], references: [id])
  clientId   String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  content    String
  created_at DateTime @default(now())
}

model Reminder {
  id         String   @id @default(uuid())
  client     Client   @relation(fields: [clientId], references: [id])
  clientId   String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  type       String // 'birthday' | 'follow_up' | 'inactive'
  date       DateTime
  done       Boolean  @default(false)
  created_at DateTime @default(now())
}
